<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Matthew Phillips</title>
<link href="http://matthewphillips.info/atom.xml" rel="self" />
<link href="http://matthewphillips.info/" />
<updated></updated>
<id>http://matthewphillips.info</id>
<author><name></name></author>

<entry>
<title>State of Developing on a Chromebook</title>
<link>http://matthewphillips.info/posts/state-of-developing-on-a-chromebook.html</link>
<updated>2013-08-30T00:00:00</updated>
<id>http://matthewphillips.info/posts/state-of-developing-on-a-chromebook.html</id>
<content type="html">&lt;p&gt;I've been developing on a Chromebook for quite a while so I feel I have a pretty good grasp on the strengths and weaknesses as they exist today. The tldr; is that, yes, you can develop on Chromebook and depending on what you consider to be &quot;developing on a Chromebook&quot; the experience can either be on-par with other computers or a tad... funky.&lt;/p&gt;
&lt;p&gt;To start, I want to clearly define what it means to &quot;develop on a Chromebook&quot; because it's important to the conversation. There are 4 routes that you can go. I won't spend a lot of time on the first 3 as they are obvious and less interesting to discuss, but the 4th is where the meat of this post belongs. Without further ado the four methods are:&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dnschneid/crouton&quot;&gt;Crouton&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This gives you a chroot environment with which you can install Ubuntu and do whatever you want. Some people really like doing this. Which is fine, but at this point you're not really using ChromeOS to develop on, even if you do dual-boot.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;SSH&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Using &lt;a href=&quot;https://chrome.google.com/webstore/detail/secure-shell/pnhechapfaindjhompbnflcldabbghjo?hl=en&quot;&gt;Secure Shell&lt;/a&gt;, a Native Client enabled SSH client, you can login into a remote computer and work using usual command-line tools like Tmux and Vim. This is currently the primary way I code on a Chromebook. While it works rather well, it's not always ideal as, for example, it's difficult to develop Chrome packaged apps this way. Getting the &lt;code&gt;crx&lt;/code&gt; file from your server to your Chromebook is tricky.&lt;/p&gt;
&lt;p&gt;The best way to work this way is to use &lt;a href=&quot;http://www.lbreda.com/grive/start&quot;&gt;Grive&lt;/a&gt;, a Google Drive sync client for Linux. Once you've created the &lt;code&gt;crx&lt;/code&gt; simply copy it to a folder in Drive. From there you can open the file in Chrome's File Manager and it will prompt to be installed. Still, this is a slow process, as the file has to be uploaded to Drive, then downloaded back down from Drive on the Chromebook and installed.&lt;/p&gt;
&lt;p&gt;But for certain types of programmers, particularly system programmers, who are always programming from an ssh session anyways, this works out as well as any other computer. Perhaps even better, Secure Shell is a very slick &quot;terminal emulator&quot; (for the lack of a better term).&lt;/p&gt;
&lt;h2&gt;Web IDE&lt;/h2&gt;
&lt;p&gt;This is the first &lt;em&gt;real&lt;/em&gt; way to program on a Chromebook. For a lot of people this works nicely. There are a lot of choices out there, two that stand out are &lt;a href=&quot;https://c9.io/&quot;&gt;Cloud9&lt;/a&gt; and &lt;a href=&quot;https://www.nitrous.io&quot;&gt;Nitrous.io&lt;/a&gt;. I have used Cloud9 a bit and it works rather nicely. For people who are used to using desktop IDE's like Eclipse then this might work well for you. My only complaint is that when you use a SaaS client you kind of have to use it for everything. That's just not my style though. I prefer a seperate application for each task, that way I can swap out the pieces I don't like. With a Web IDE if you don't like any one piece your own recourse is to switch to an entirely different IDE.&lt;/p&gt;
&lt;h2&gt;Working locally&lt;/h2&gt;
&lt;p&gt;Which brings me to the last way to work, the most interesting way to work, and the most frustrating way to work on a Chromebook. Despite the complaints that are to follow I want to make it clear that the future looks bright for this category. There are many applications and APIs under development (as I'll discuss) that are going to dramatically improve the experience of developing locally on a Chromebook.&lt;/p&gt;
&lt;p&gt;Since packaged apps are still in their young days there aren't a million options for text editors, but there are already a few. The best of which is probably Google's own &lt;a href=&quot;https://chrome.google.com/webstore/detail/text/mmfbcljfglbokpmkimbfghdkjmjhdgbg?hl=en&quot;&gt;Text&lt;/a&gt; (of which I'm an inactive contributor). It's not great, but it's just fine for the earlier stages of things.&lt;/p&gt;
&lt;p&gt;However, you run into trouble when you start thinking about workflow. This is the area that Chrome needs to round out with better APIs. Let's say you are starting a new project on your Chromebook, where do you store it? Well, on many Chromebooks there is little hard drive space so having a lot of development projects on it might be a bad idea (my Chromebook considers it's entire hard drive to be a &quot;Downloads&quot; folder, indicating that it is intended for temporary storage only). The alternative is to use Google Drive, which is probably the best option for now. You can even mark files as available offline in Drive and not have to worry about losing an internet connection.&lt;/p&gt;
&lt;p&gt;This is still not quite ideal, though. Drive is limited, you have to manage how much stuff you keep there. And perhaps your work uses Dropbox. There is no way to use Dropbox (besides the web app) on a Chromebook. This is why I've long wanted an API for filesystems, so that WebDAV or Dropbox or whatever can live right beside Google Drive in the File Manager and file picker menus. Luckily there has been some movement on this issue lately with some Googlers &lt;a href=&quot;https://docs.google.com/document/d/1VkaRYDP3RMESygl6Po0ajimXqijejZNF2p9rCszYEew/edit&quot;&gt;discussing the idea&lt;/a&gt;. It's not evidence that it will be coming soon, it's just a positive sign that they are thinking about the same things.&lt;/p&gt;
&lt;p&gt;Even if you are able to develop locally how do you share that code? How do you use source control? This is one area where things look positive. The developer Tim Caswell has been working on &lt;a href=&quot;https://github.com/creationix/js-git&quot;&gt;js-git&lt;/a&gt;, a reimplementation of &lt;code&gt;git&lt;/code&gt; in JavaScript (including the use of Chrome socket APIs) for the past few months. Although still in early stages I can see this project becoming very usable in the near term.&lt;/p&gt;
&lt;p&gt;Suddenly the workflow starts to look a bit nicer. Imagine have a Git web-app (powered by &lt;code&gt;js-git&lt;/code&gt;) that manages a git repo, then doing developing with Text or another editor, then going back to the git app to commit and push. What would be even better is if a git repo could become a &quot;filesystem&quot; that sits in the filepicker. That way it could be always connected (perhaps a save operation prompted a commit) and therefore always up to date in the cloud.&lt;/p&gt;
&lt;p&gt;This just leaves out one area of a developer's workflow; testing. If you're developing for the browser you're in luck ;) There's a nice one sitting in front of your face. For everyone else... perhaps a Chromebook isn't what you need. Still, it might be possible in the future to compile a small linux environment like busy box down to a JavaScript blob and even install things like Python on it. I'm getting a bit a head of myself, and those things would (likely) never be very fast, but it's something we can see happening. Certainly languages that compile to JavaScript are already flourishing, and most have the ability to compile within a browser, so as long as you are using browser APIs you're set.&lt;/p&gt;
</content>
</entry>
<entry>
<title>Batman: The Long Halloween</title>
<link>http://matthewphillips.info/posts/batman-the-long-halloween.html</link>
<updated>2013-08-29T00:00:00</updated>
<id>http://matthewphillips.info/posts/batman-the-long-halloween.html</id>
<content type="html">&lt;p&gt;&lt;em&gt;By Jeph Loeb&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;By the time I flipped to the last page of The Long Halloween I had already decided that it was one of the best detective stories I had ever read. I had concluded that, in fact, it should be read in literature classes. Even after a couple of weeks to sit on it I can't really back down from either of those statements. If any medium needs a signature piece, a piece to illustrate what makes the medium worthwhile, comics do, and Batman The Long Halloween could be that. This sounds hyperbolic, I know, and I do not mean to say that The Long Halloween is the best the medium has to offer; rather I am saying that it follows a familiar genre; one known in practically all fictional mediums, and it does so as well as the best of any other. And because of that it serves an exemplary comic book. That when you have a story as entralling as this, with art that perfectly complements it, you cannot put it down.&lt;/p&gt;
&lt;p&gt;At it's core Batman The Long Halloween is a three act detective story. In the first act there is the setup. Batman, who needs little introduction. The crime families of Gotham; The Falcones and the Maronis. Harvey Dent, district attourney. Catwoman. The commissioner, Jim Gordon. The second act comes quickly, as members of the crime families begin to be picked off. The third act comes unexpectedly at the end of the book, throwing a curveball at the reader.&lt;/p&gt;
&lt;p&gt;The pace of the book is relentless. Each issue (except for a couple) revolves around a holiday and after the first couple the reader realizes that there will be a murder in each. This creates a rather intense sort of anxiety in the reader, who knows a murder is coming within only a handful of pages. If I were to criticize the pacing at all it is that the pacing, which no doubt was done to fit with the theme of each issue representing a separate holiday, makes it more difficult to appreciate Batman as a detective. There aren't enough pages to contain both the movement of the plot forward, the profoundly interesting supporting case, and Batman making progress on the case.&lt;/p&gt;
&lt;p&gt;I'm not sure that it matters, however, as this is a whodunnit where you don't care so much about whodunnit. That might be the least interesting part about The Long Halloween. What makes this a defining piece of comic book literature is the world building done by Loeb right from the beginning. From the beginning it feels like you are dropped into Godfather, except with tights and psychotic characters. And at the same time it's as noir as a comic book gets. That Loeb was able to pull those three genres together; noir, gangster, and superhero, together into a seemless, liveable, world is particularly amazing. It's the thing that keeps you glued from the beginning to the end.&lt;/p&gt;
&lt;p&gt;As great as the book is, it's not quite perfect. There are elements that didn't have me on the edge of my seat. For example, although the crime family drama was interesting, I can't point to any of the characters that I found particularly interesting on their own. In fact, I can't really remember much about the characters at all. This doesn't, I don't think, point to any weakness of the characters, but probably rather that I'm just not that big of a fan of the crime family genre. For many this won't be an issue, but for me it meant I had to keep notes in order to keep track of what was going on, and who might be Holiday.&lt;/p&gt;
&lt;p&gt;I've read many who think that Tim Sale's artwork in this book is an example of a book that thrives despite subpar art, but I couldn't disagree more. There is definitely a lack of symmetry in the art, but I don't consider that to be a weakness at all. It is fitting with the gritty narrative. A polished looking character doesn't belong in the world Loeb has created here. There still is an incredible amount of detail in the art. It's just a little crooked, that's all.&lt;/p&gt;
&lt;p&gt;Being one of the only Batman classics I've read, I don't have the perspective to talk about Harvey Dent's transformation in the light of the history of the character. So I have to approach it as though it is his origin story (although I know that it is not). But from that perspective it's still a fascinating look at a character who breaks down at the weight of events that surround him. Harvey is part of the triumvirate of Batman, Gordon, and himself. He feels the pressure to live up to his peers, and at the same time he is the public face for what is happening in Gotham. He feels a religious need to bring order to a city that has lost it. And it is that pressure that, or so we are led to believe, causes him to snap and become Holiday. The truth, as we find out, is that Harvey isn't Holiday. Or at least, he's not Holiday all on his own. He also had his wife paying a role as well.&lt;/p&gt;
&lt;p&gt;I have trouble coming to terms with his wife as being in on the act. We are not given a reason for her to become a killer. It feels, rather, that Loeb wanted a good twist and this provided one. Dent was a suspect from the early chapters and it would be too easy to have him be the lone perpetrator. Never the less, these are all minor quibbles. The book succeeds due to it's amazing pacing, wide and layered cast, and world building. As a representative of the best of comic books it would make great learning material in schools, and as a comic fan it's something you are missing out on if you haven't read.&lt;/p&gt;
</content>
</entry>
<entry>
<title>Using Cloud Drives on Chromebooks</title>
<link>http://matthewphillips.info/posts/sync-cloud-drive-chromebook.html</link>
<updated>2013-08-26T00:00:00</updated>
<id>http://matthewphillips.info/posts/sync-cloud-drive-chromebook.html</id>
<content type="html">&lt;p&gt;tldr; you can't. However what you can do is use an old computer to sync between Google Drive and your other cloud drives, providing (close to) the same effect. I set up a Raspberry Pi, which was previously setting in my basement looking pretty and acting as a Cloud Print server but nothing else, as a WebDAV server which has worked out rather nicely. The one downside is that Chromebooks only support Google Drive as a cloud drive service.&lt;/p&gt;
&lt;p&gt;It's rather nice how well Drive is integrated into ChromeOS. And eventually, hopefully, they'll open up an API that allows other cloud services to have similar integration. That would really change the way you think about ChromeOS, pulling it a few steps closer to &quot;real computer&quot; territory.&lt;/p&gt;
&lt;p&gt;Alas that's not the case today, but what you can do is take an old computer, or raspberry pi, and have it act as a synchronization server between your services. This will work with Dropbox, SkyDrive, Ubuntu One, or any provider that supports WebDAV.&lt;/p&gt;
&lt;h1&gt;Syncing Google Drive to your server&lt;/h1&gt;
&lt;p&gt;I won't get into how to set up your other cloud services to sync, most either have first or third party clients that are easy enough to set up. As is the case with Google Drive. First there is the proprietary app &lt;a href=&quot;https://www.insynchq.com/&quot;&gt;Insync&lt;/a&gt; that works pretty well and has added features such as multiple account support. If your needs are simpler then &lt;a href=&quot;http://www.lbreda.com/grive/start&quot;&gt;Grive&lt;/a&gt; should do the trick, and it is what I use.&lt;/p&gt;
&lt;p&gt;On a Raspberry Pi setting everything up was somewhat complicated as it requires several dev packages (strangely including QT4). &lt;a href=&quot;http://www.stuffaboutcode.com/2013/03/raspberry-pi-google-drive-grive.html&quot;&gt;This guide&lt;/a&gt; does a good job of walking you through the process, although I had to apply the fix shown in &lt;a href=&quot;https://github.com/Grive/grive/issues/168&quot;&gt;this issue&lt;/a&gt; to get it to finally compile.&lt;/p&gt;
&lt;p&gt;Once install &lt;code&gt;grive&lt;/code&gt; is still a little strange to use. It requires that its binary be stored in the root of Google Drive, and it must be run from within that directory. So just remember that when you want to sync Drive to do &lt;code&gt;cd ~/googledrive &amp;amp;&amp;amp; ./grive&lt;/code&gt; or just create a script that does that for you.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;grive&lt;/code&gt; only syncs when you run it you'll want to set up a cron job to do it periodically. Type &lt;code&gt;crontab -e&lt;/code&gt; and do something like this:&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;*/5 * * * * ~/update-grive.sh &amp;gt;&amp;gt; ~/log/grive.log&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;This tells cron to run the script every 5 minutes. Doing it a little more often probably isn't a problem, I'm just being conservative for now.&lt;/p&gt;
&lt;h1&gt;Syncing with other cloud provider&lt;/h1&gt;
&lt;p&gt;First a word of warning; anything you choose to sync with Drive will exist in Drive; meaning it will count against your storage. For this reason I only sync text files. But it's your storage, do with it what you want.&lt;/p&gt;
&lt;p&gt;Once you've set up sync with your other cloud provider you should have a folder on your server with it's contents. It would be nice if a simple symlink did the trick, but alas grive won't sync down changes from Drive that propogate to the symlink's destination.&lt;/p&gt;
&lt;p&gt;Instead I'd recommend the handly utility &lt;a href=&quot;http://www.cis.upenn.edu/~bcpierce/unison/&quot;&gt;Unison&lt;/a&gt; for two-way sync. So any changes you make to one drive will be merged over into the other. I'm not sure how it handles conflicts, but more than likely you won't be editing the same file in two different services at the same time anyways.&lt;/p&gt;
&lt;p&gt;Once you've installed Unison you'll want to go through the process of running it through the ui the first time:&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;unison ~/webdav/reviews ~/googledrive/webdav_stuff&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Remember that there is no source and destination here so it doesn't matter which you list first. After the first synchronization you'll want to run unison silently so that it doesn't prompt you for instructions. You can achieve this with the &lt;code&gt;-batch&lt;/code&gt; flag:&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;unison -batch ~/webdav/reviews ~/googledrive/webdav_stuff&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Add this to cron the same way you did previously with grive:&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;code&gt;*/5 * * * * ~/sync-folders.sh &amp;gt;&amp;gt; ~/log/unison.log&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;And that's it! From now on you can work on your files no matter what computer you're on. When I'm on a traditional PC I edit files on my WebDAV drive, and when on a Chromebook I use Google Drive (which is how I'm writing this article now).&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The recent updates to Chromebooks and the new packaged apps 2.0 is opening a lot of the possibilities to the platform. Additionally it is showing some of the warts, such as the inability to work on files from &lt;em&gt;other&lt;/em&gt; sources. Although I think these holes will eventually be filled, in the mean time we need to do workarounds such as this in order to work the way we want to work. I plan on writing about more of these tricks as I use the platform.&lt;/p&gt;
</content>
</entry>
<entry>
<title>Catwoman Volume 2: No Easy Way Down</title>
<link>http://matthewphillips.info/posts/catwoman-volume-2-no-easy-way-down.html</link>
<updated>2013-08-04T00:00:00</updated>
<id>http://matthewphillips.info/posts/catwoman-volume-2-no-easy-way-down.html</id>
<content type="html">&lt;p&gt;&lt;em&gt;By Ed Brubaker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I originally picked up this trade on a whim, seeing it on the shelf at my LCS. I have long liked the Catwoman character, but in all the times when I tried out her ongoing I usually found it to be wanting. I suppose I had written off the series as being too low-priority for DC. Boy was I wrong. Had I known how fantastic this series would be I would have probably picked up the first trade before going for volume 2. Not to worry, I now have that one as well.&lt;/p&gt;
&lt;p&gt;Brubaker has a much different take on the character than anything I've read or seen before. Your typical Catwoman is that of clever thief with a heart-of-gold who you can never quite trust completely. It's that characteristic, that she's going to screw you in the end, that has followed the character around. For me at least it's gotten a little stale; and because of that I can understand why some people feel like Catwoman isn't a character that much can be done with. Lucky Brubaker puts that opinion to rest for good. This is a different Catwoman. There is no heart-of-gold here, she's a geniunely good person who has a certain perspective that allows her to do bad things to people of a certain affluence and power. But to her peeps, those who grew up on the street like her, she's somewhat of a Robin Hood figure.&lt;/p&gt;
&lt;p&gt;In this series we see a half-reformed Catwoman. One who has turned to a life of charity and giving back to the place that made her who she is. But she always has one foot back in the life of anti-heroism, as she seeks to protect her neighborhood. That's what makes the dynamic of this book so intriguing. We know that she's going to remain Catwoman yet the woman that we see as Selina Kyle isn't capable of becoming an out-and-out criminal. So she has to tip-toe the line. She is a vigilante, but a respectable one.&lt;/p&gt;
&lt;h2&gt;Black Mask&lt;/h2&gt;
&lt;p&gt;This is the first time I've read a &lt;strong&gt;Black Mask&lt;/strong&gt; story, not being aware of the character at all before picking up this trade. First thought was that he looks almost exactly like Red Skull, one of Captain America's rogues, but the internet seems to suggest the characters aren't much related aside from their looks. Black Mask is a crime boss, and that's the gist of what I know about the character.&lt;/p&gt;
&lt;p&gt;Unfortunately this series doesn't get too much into his background or motivation. In one of the very last issues of the trade we get a little back story about what happened to him. It's a creepy vignette about being tortured and how surviving it led him to embrace the mask and see torture as an art form.&lt;/p&gt;
&lt;p&gt;Not to worry though, this story is about Catwoman and how her past follows her into her present. Selina finds that a childhood friend, Sylvia Sinclair, has made her way back to Gotham, seemingly helping kids stay out of trouble. Later we found out that she is working for Black Mask; being used actually because she is one of the only people that know the true identity of Catwoman.&lt;/p&gt;
&lt;p&gt;Catwoman is getting in Black Mask's way, it's as simple as that. However, it's an interesting exploration into how Catwoman deals with the fact that her past causes hardship in her present, and how it affects those around her. Selina's sister is badly traumatized in this storyline (her husband is tortured and murdered) and that follows the rest of the trade.&lt;/p&gt;
&lt;h2&gt;Selina and Holly Road Trip It&lt;/h2&gt;
&lt;p&gt;The trade drags a little after the Black Mask story completes with Selina, her sister, and Slam (who is an awesome character by the way) deal with the events that occurred in the previous story. There's some good stuff here, and Slam and Selina's relationship is revealing about both of their personalities; Selina wants a distraction whereas Slam wants something to anchor him to the real world. Ultimately though, aside from the gorgeous art, I felt that this middle section could have been left out.&lt;/p&gt;
&lt;p&gt;After, however, we get a series of wonderful stories involving Selina and Holly going on a road trip and the adventures that follow from that. Wildcat makes an appearance and becomes Holly's trainer. Catwoman and Holly stumbling upon a robbery in a diner is my favorite.&lt;/p&gt;
&lt;p&gt;This is what I really want from a Catwoman series, I've decided. The 1 or 2 issue story arcs work well for the character as they allow her to explore the many sides of her personality, better. I'm hoping that the 3rd trade continues with that, at least for a while.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This trade did exactly what a good trade is supposed to do; left me wanting more, but feeling satisfied for what I got. To that end I've picked up volume 1, which features Brubaker along with Darwyn Cooke (who I've liked in nearly everything he's done).&lt;/p&gt;
&lt;p&gt;Although it stumbled just a little after the conclusion of the Black Mask story, it eventually turned into a series of smaller fun stories. I could have an ongoing of these types of Catwoman stories and you'd get no complaints out of me.&lt;/p&gt;
&lt;p&gt;Catwoman Volume 2 has made me rethink what is possible with characters who are seemingly one-dimensional. Brubaker tapped into the 60s aesthetic his artists gave him and used it to paint a wonderful tapestry of Selina Kyle living with his past and struggling to embrace the present. Is there any better compliment a writer can get?&lt;/p&gt;
</content>
</entry>


<entry>
<title>Hover.com Adds Unwanted Forwards</title>
<link href="http://www.matthewphillips.info/2011/09/no-thanks-hover.html" />
<id>urn:uuid:29b03b40-e155-11e0-9572-0800200c9a66</id>
<updated>2011-09-17T09:58:02Z</updated>
<summary>
Hover.com redesigned their admin interface a while back, and I'd only gotten the chance to play around with it a little bit. One of the nice things about Hover has always been it's simplicity and lack of noise as compared to a site like Go Daddy. A couple of weeks back I was doing some maintenance on unused domains and decided to poke around, finally coming across the Forwards interface.
To my surprise Hover.com has set up some forwards without my permission or knowledge. Luckily the domain in question is completely unused. If this had been my name domain I would be considerable more upset. But nevertheless, this is unacceptable. I don't want Hover profiting off of my domains except through charging me money for the services they provide.
</summary>
</entry>
<entry>
<title>I Don't Want Your Ecosystem</title>
<link href="http://www.matthewphillips.info/posts/ecosystems-harmful.html" />
<id>urn:uuid:5f63f410-eb97-11e0-9572-0800200c9a66</id>
<updated>2011-09-30T11:58:02Z</updated>
<summary>
The word of the moment seems to be "ecosystem", coming off of the announcement of Amazon's Kindle Fire tablet. In their case ecosystem refers to the catalog of media content Amazon has built up: books, movies, tv shows, music, and apps. If you're talking about Google ecosystem means something else. It's their web services: email, calendar, maps, etc. If you're talking about Apple you're probably mostly referring to their dedicated developer community. And of course Microsoft has their ecosystem, RIM has theirs, even Samsung to some degree.
</summary>
</entry>
<entry>
<title>On JavaScript and modules</title>
<link href="http://www.matthewphillips.info/posts/on-js-modules.html" />
<id>urn:uuid:cc2223f0-8f3e-11e2-9e96-0800200c9a66</id>
<updated>2013-03-17T16:11:02Z</updated>
<summary>
Writing modular JavaScript for the browsers is in a sad state. Though many solutions exist, they all ask a lot of developers, whether it is to write code in a certain way or to know too much about how the solution works, and none of them are forwards compatible. What we need is a way to write ES6 modules today.
</summary>
</entry>
</feed>